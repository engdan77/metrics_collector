flowchart

subgraph Conceptual design for class interfaces
    direction BT
    subgraph BP["Orchestrator abstraction"]
        et["class Orchestrator()\n+get_extract_params_def(dag_name)\n+get_extract_objects(dag_name, extract_params)\n+process_dates(extract_objects, from_, to_, progress_bar=pb)\n+get_transform_object(dag_name, extract_objects)\n+get_all_graphs(from_, to_, dag_name, transform_object, 'html')\n"]
    end
        subgraph ETL
            direction LR
                subgraph Extract_Data
                direction BT
                    gd["concrete class\ndag_name\n+get_data_from_service()"] --> BE["abstract BaseExtract()"]
                end
                subgraph Transform_Data
                direction BT
                    pp["concrete class\ndag_name\n+process_pipeline(from, to)\n+input_schema"] --> BT["abstract BaseTransform()"]
                end
                subgraph Graph_Data
                direction BT
                    ga["concrete class\n+dag_name\nget_all_graph_methods(graph_format)\n+to_html()\n+to_png()"] --> BL["abstract BaseLoadGaph()"]
                end
            end
        subgraph FE["Web/REST"]
            x
        end
    end
    
Extract_Data ==> Transform_Data ==> Graph_Data
ETL ==> BP
BP ==> FE